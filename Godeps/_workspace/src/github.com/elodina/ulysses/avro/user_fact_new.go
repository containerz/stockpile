package avro

import "github.com/elodina/go-avro"

type UserFactNew struct {
	ProcessID int64
	UserID    int64
	Type      int32
	Factdata  []byte
}

func NewUserFactNew() *UserFactNew {
	return &UserFactNew{
		Factdata: []byte{},
	}
}

func (this *UserFactNew) Schema() avro.Schema {
	if _UserFactNew_schema_err != nil {
		panic(_UserFactNew_schema_err)
	}
	return _UserFactNew_schema
}

// Generated by codegen. Please do not modify.
var _UserFactNew_schema, _UserFactNew_schema_err = avro.ParseSchema(`{
    "type": "record",
    "namespace": "avro",
    "name": "UserFactNew",
    "fields": [
        {
            "name": "ProcessID",
            "type": "long"
        },
        {
            "name": "UserID",
            "type": "long"
        },
        {
            "name": "Type",
            "type": "int"
        },
        {
            "name": "Factdata",
            "type": "bytes"
        }
    ]
}`)
