package avro

import "github.com/elodina/go-avro"

type UserFact struct {
	UserID   int64
	Type     int32
	Factdata []byte
}

func NewUserFact() *UserFact {
	return &UserFact{
		Factdata: []byte{},
	}
}

func (this *UserFact) Schema() avro.Schema {
	if _UserFact_schema_err != nil {
		panic(_UserFact_schema_err)
	}
	return _UserFact_schema
}

// Generated by codegen. Please do not modify.
var _UserFact_schema, _UserFact_schema_err = avro.ParseSchema(`{
    "type": "record",
    "namespace": "avro",
    "name": "UserFact",
    "fields": [
        {
            "name": "UserID",
            "type": "long"
        },
        {
            "name": "Type",
            "type": "int"
        },
        {
            "name": "Factdata",
            "type": "bytes"
        }
    ]
}`)
